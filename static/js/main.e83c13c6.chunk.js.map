{"version":3,"sources":["Components.js/Header.js","Components.js/Statedata.js","Components.js/India.js","Components.js/World.js","App.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","Component","Statedata","state","stateData","Axios","get","then","response","setState","data","keys","Object","this","Accordion","map","itm","ky","districts","districtData","total_active","total_confirmed","total_deaths","total_recovered","district_list","x","active","confirmed","deceased","recovered","ob","push","Card","as","Button","eventKey","districts_name","India","axios","src","alt","style","width","Body","Title","cases","deaths","World","country","marginLeft","countryInfo","flag","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e83c13c6.chunk.js","sourcesContent":["import  React , {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\n class Header extends Component{\r\n     render(){\r\n         return(\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">Covid-tracker</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Link className=\"nav-link\" to=\"/india\">India</Link>\r\n                <Link className=\"nav-link\" to=\"/world\">World</Link>\r\n              \r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n         )\r\n     }\r\n }\r\n export default Header;\r\n","import { Component } from \"react\";\r\nimport Axios from 'axios';\r\nimport {Accordion , Card , Button} from 'react-bootstrap';\r\n\r\nclass Statedata extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            stateData : {}\r\n        }\r\n    }\r\n        componentDidMount(){\r\n            Axios.get(\"https://api.covid19india.org/state_district_wise.json\").then(response=>{\r\n           // response.data\r\n            this.setState({stateData:response.data});\r\n            });\r\n        }\r\n    \r\n    render(){\r\n        let keys =Object.keys(this.state.stateData);\r\n        return(\r\n           <div className=\"row\">\r\n               <div className=\"col-md-12\">\r\n               <Accordion>\r\n                   {\r\n                       keys.map((itm,ky)=>{\r\n                          \r\n                              let districts=this.state.stateData[itm].districtData;\r\n                              let districts_keys = Object.keys(districts);\r\n                              let total_active=0;\r\n                              let total_confirmed=0;\r\n                              let total_deaths=0;\r\n                              let total_recovered=0;\r\n                              let district_list =[];\r\n                              for (let x in districts){\r\n                                    total_active += districts[x].active;\r\n                                    total_confirmed += districts[x].confirmed;\r\n                                    total_deaths += districts[x].deceased;\r\n                                    total_recovered += districts[x].recovered;\r\n                                    let ob = districts[x];\r\n                                    ob [\"districts_name\"] = x;\r\n                                    district_list.push(ob)\r\n                                    \r\n                              }\r\n                              return(\r\n                                <Card>\r\n                                <Card.Header>\r\n                                  <Accordion.Toggle as={Button} variant=\"primary\" eventKey={ky} className=\"p-2 col-md-10\">\r\n                                    {itm} <Button className=\"btn btn-info p-2 mr-2 ml-3\">Total cases- {total_confirmed}</Button>\r\n                                    <Button className=\"btn btn-warning p-2 mr-2 ml-3\"> Active cases- {total_active}</Button>\r\n                                    <Button className=\"btn btn-success p-2 mr-2 ml-3\">Recovered- {total_recovered}</Button>\r\n                                    <Button className=\"btn btn-danger p-2 mr-2 ml-3\">Total deaths- {total_deaths}</Button>\r\n\r\n                                  </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey={ky}>\r\n                                <table className=\"table table-bordered table-striped\">\r\n                                    <thead> \r\n                                        <tr> \r\n                                            <th>Districts</th>\r\n                                        <th>Coniformed</th>\r\n                                        <th>Active</th>\r\n                                        <th>Recovered</th>\r\n                                        <th>Deaths</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                            {\r\n                                                district_list.map((itm,ky)=>{\r\n                                                    return(\r\n                                                            <tr>\r\n                                                                        <td>{itm.districts_name}</td>\r\n                                                                        <td>{itm.confirmed}</td>\r\n                                                                        <td>{itm.active}</td>\r\n                                                                        <td>{itm.recovered}</td>\r\n                                                                        <td>{itm.deceased}</td>\r\n                                                            </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                    </tbody>\r\n                                </table>\r\n                                </Accordion.Collapse>\r\n                              </Card>\r\n                              )\r\n                       })\r\n                   }\r\n  \r\n  \r\n</Accordion>\r\n               </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\nexport default Statedata;","import { Component } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Statedata from './Statedata';\r\nimport axios from \"axios\";\r\n\r\nclass India extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data : {}\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        axios.get(\"https://corona.lmao.ninja/v2/countries/india\").then(response=>{\r\n           this.setState({data:response.data}) \r\n        });\r\n    }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <img\r\n            src=\"https://www.countryflags.io/in/shiny/64.png\"\r\n            alt=\"indiaflag\"\r\n          />\r\n          <h3>India</h3>\r\n        </div>\r\n       \r\n        <div className=\"col-md-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <Card className=\"badge badge-info \" style={{ width: \"18rem\" }}>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>TOTAL CASES</Card.Title>\r\n                  <h3>{this.state.data.cases}</h3>\r\n                  \r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <Card className=\"badge badge-warning\" style={{ width: \"18rem\" }}>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>ACTIVE CASES</Card.Title>\r\n                  <h3>{this.state.data.active}</h3>\r\n             \r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <Card className=\"badge badge-success \" style={{ width: \"18rem\" }}>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>RECOVERD</Card.Title>\r\n                  <h3>{this.state.data.recovered}</h3>\r\n                \r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <Card className=\"badge badge-danger\" style={{ width: \"18rem\" }}>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>DEATHS</Card.Title>\r\n                  <h3>{this.state.data.deaths}</h3>\r\n                \r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <Statedata/>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default India;\r\n","import { Component } from \"react\";\r\nimport  axios from \"axios\";\r\nimport Datatable from 'react-bs-datatable';\r\n///import tableHeaders from 'react-bs-datatable';\r\n///import { tableBody , tableHeaders } from 'react-bs-datatable';\r\n\r\n\r\n\r\nclass World extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            data : []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        axios.get(\"https://corona.lmao.ninja/v2/countries\").then(response=>{\r\n            this.setState({data:response.data});\r\n        });\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col md-12\">\r\n                    <table className=\"table  table-primary table-bordered  table-striped \">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Country</th>\r\n                                <th>Total cases</th>\r\n                                <th>Recoverd</th>\r\n                                <th>Deaths</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                            this.state.data.map((itm,ky)=>{\r\n                                return(\r\n                                    <tr>\r\n                                        <td>{itm.country}\r\n                                        <img style={ {width:'64px' , marginLeft:'10px'} } src={itm.countryInfo.flag}/>\r\n                                        </td>\r\n                                        <td>{itm.cases}</td>\r\n                                        <td>{itm.recovered}</td>\r\n                                        <td>{itm.deaths}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//<Datatable tableHeaders={header} tableBody={body} />\r\nexport default World;","import React ,{Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button} from 'react-bootstrap';\nimport Header from './Components.js/Header';\nimport India from './Components.js/India';\nimport World from './Components.js/World';\n//import Statedata from './Components.js/Statedata';\nimport {\n  BrowserRouter as Router ,\n  Link,\n  Route,\n  Switch\n} from 'react-router-dom';\nclass App extends Component{\n  constructor(){\n    super();\n  }\n  render(){\n    return(\n      <div className=\"container-fluid\">\n      <Router>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\">\n            <India/>\n          </Route>\n          <Route  path=\"/india\">\n            <India/>\n          </Route>\n          <Route  path=\"/world\">\n            <World/>\n          </Route>\n        \n        </Switch>\n      </Router>\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}